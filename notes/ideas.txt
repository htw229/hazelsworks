x markup
x [number]
x [month]

x ignore caps

x check for whole matches first, then matches with 's' apostrophe-s or with 'ed', then as end of word(?)

x duplicates

x active/inactive
x dialogue
x sort by length before adding suffixes (so that longer and multiple words found first)


y -> -ies
e -> -ing
-d (not ed)
-y

add to instructions that the following trigger a links to topic pages:
insult
exclamation
(cannot use symbols to trigger these as only looking at word characters in text)

x add 'see also' to link topics to each other

make topic page not found to go to topic list (make into single view, and single html?) -> or just generic 404 page

x make URLs reverse : https://stackoverflow.com/questions/11241668/what-is-reverse-in-django
x make admin boxes larger: https://stackoverflow.com/questions/910169/resize-fields-in-django-admin

add british spelling
add irregular verbs
add irregular plurals

consider -> text "also consider"

add "not" to pattern (ie "course" in uni sense could exclude "of course", "period" exclude "period of time")


Dialect
Search preset

Dialog by character


# TODO: is smart search not working?
# replacements not being displayed correct inline



britpick.py will output:
{% include "inline_replacement.html" with replacement=replacement.1 %}
as well as list of objects being replaced (index number will correspond with object)

output replacements objects from view

inline_replacement.html
[<span style="category">{{ replacement.suggestreplacement }} | replacement.considerreplacements, (replacement.clarification | replacement.explanation)</span>][replacement.topic]

category -> css style

- if replacement doesn't contain anything (text or topic link), then make it a 'may not be used in BrE'
- change (am) and (br) to AmE and BrE

Displays search options chosen & display form with them chosen
Display (mouseover?) instructions

Standardize form options and english text
Format form









x get every searchword, store it with its object (multiple per object)
x sort searchwords by length
for each searchword, generate a pattern with suffix options, markup, verb tenses (single string per object)

x for each N words of same match type (quotes, no quotes) - maybe make generator?:
    x group N of them together that have same wrapping pattern
    x create full regex search with wrapper quote/no quote wrapper and inner pattern (?P<pk456>wordsubpattern)|<?P<pk567>wordsubpattern)|etc

x compile pattern, find matches with finditer and loop through them
    x find out which group matched with m.lastgroup
    x make replacementtext







exclude:
- by object
- markup in searchwords - ^^^ searchword
- take match, take characters 100 before, 100 after match (exclude <> markers); if it matches exclude pattern then skip match

- words to add exclude to: 950, 109, 887, 355





- go through gemma's article, chat transcripts

- find words that have no match (ie 'of course')
- add nearby words (call, hood)
- (miss) - next word has to start uppercase
# for nouns - exclude 'is' in front of them

INSTRUCTIONS
# - at beginning protects whole phrase
word# - after word, protects word
. - at end, makes end of phrase
? - at end, makes question
(s) - protected except for plural
___ - placeholder for word(s)
(_) - opt placeholder for word(s)
(n) - has to be noun



WORD PAGE:

first american word / first british word

dialect, category

american words (exclude: ___)
british words
explanation
clarification
topics



"to be pissed" means to be drunk
"to be on the piss" means to be out getting drunk
telling someone to "piss off" means they should go away
"to be pissed off" has the same meaning as it does in America which is to be annoyed with someone
"to piss about" is to be silly or mess around
"to take the piss out of" someone is to make fun of or tease them






2nd level words
words that have specific pages (sod, piss, bollocks, quite), direct link from either text itself or ???




- change yorkshire to northern?


- add quick reference (put URL in comment or text and it automatically creates reference and adds it to list)
- add url to words themselves (caution with this one?)

- get rid of suggestreplacement (merge into 1st consider)
- references - make URL unique=True


topics
- "word" (examples, italics)
- ""quoted text""
- lists?
- > (tab)
- [url] (put in URL, will make link to that url without adding formal entry in references?)
- preserve multiple linespaces


database stuff
- references that aren't used
- topics that don't have links anywhere
- lack of content



Offensiveness
* Mild
** Medium
*** Strong
**** Strongest










